{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "BigbangAC",
  "scopeName": "source.big",
  "uuid": "f9e9871d-2ea6-4be0-afd2-fc382d704716",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#datatype"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#number"
    },
    {
      "include": "#string"
    },
    {
      "include": "#set"
    },
    {
      "include": "#lang-func"
    },
    {
      "include": "#tuple-key"
    }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.semicolon.BigbangAC",
      "match": "(?x) (?<=^|[()\\[\\]{}\",'`/\\s]) (/) .* $"
    },
    "datatype": {
      "name": "storage.type.BigbangAC",
      "match": "(?x)\n(?<=^|[\\s:(){},])\n(tuple|list|response|optional|buff|string-ascii|string-utf8|principal|bool|int|uint)\n(?=[\\s(){},])"
    },
    "keyword": {
      "name": "constant.language.BigbangAC",
      "match": "(?x)\n  (?<=^|[\\s:(){},]) \n  (?:block-height|burn-block-height|contract-caller|false|is-in-regtest|none|stx-liquid-supply|true|tx-sender)\n  (?=[\\s(){},])\n"
    },
    "number": {
      "name": "constant.numeric.BigbangAC",
      "match": "(?x)\n  (?<=^|[\\s:(){},])\n  \\'[0-9A-Z]{28,41}(:?\\.[a-zA-Z][a-zA-Z0-9\\-]+){0,2}|\n  0x[0-9a-f]{2,}|\n  u[0-9]+|\n  [0-9]+\n  (?=[\\s(){},]|$)\n"
    },
    "string": {
      "name": "string.quoted.double.BigbangAC",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.BigbangAC"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.BigbangAC"
        }
      },
      "patterns": [
        {
          "include": "#escape-char"
        }
      ]
    },
    "escape-char": {
      "name": "constant.character.escape.BigbangAC",
      "match": "\\\\."
    },
    "lang-func": {
      "match": "(?x)\n  (?<=^|[(]) \\s*\n  (\n    and|append|as-contract|as-max-len\\?|asserts!|at-block|begin|concat|contract-call\\?|contract-of|\n    default-to|element-at|err|filter|fold|ft-burn\\?|ft-get-balance|ft-get-supply|ft-mint\\?|ft-transfer\\?|\n    get|get-block-info\\?|hash160|if|impl-trait|index-of|is-eq|is-err|is-none|is-ok|is-some|keccak256|\n    len|let|list|log2|map|map-delete|map-get\\?|map-insert|map-set|match|merge|mod|nft-burn\\?|nft-get-owner\\?|\n    nft-mint\\?|nft-transfer\\?|not|ok|or|pow|principal-of\\?|print|secp256k1-recover\\?|secp256k1-verify|sha256|\n    sha512|sha512/256|some|sqrti|stx-burn\\?|stx-get-balance|stx-transfer\\?|to-int|to-uint|try!|unwrap-err-panic|\n    unwrap-err!|unwrap-panic|unwrap!|var-get|var-set|xor\n  ) \\s+\n",
      "name": "keyword.control.BigbangAC"
    },
    "set": {
      "patterns": [
        {
          "include": "#set-func"
        },
        {
          "include": "#set-var"
        },
        {
          "include": "#set-func"
        }
      ]
    },
    "set-func": {
      "begin": "(?x)\n  (?<=^|[(]) \\s*\n  (var-get|var-set|map-get\\?|map-set|map-insert|get) \\s+\n  ([a-z][a-zA-Z0-9_-]+) \\s*\n",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.BigbangAC"
        },
        "2": {
          "name": "variable.other.BigbangAC"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.end.BigbangAC"
        }
      },
      "patterns": [
        {
          "include": "#lang-func"
        },
        {
          "include": "#tuple-key"
        },
        {
          "include": "#number"
        }
      ]
    },
    "set-func": {
      "begin": "(?x)\n  (?<=^|[(]) \\s*\n  (set-(?:public|private|read-only)) \\s+\n  (\\() \\s*\n  ([a-z][a-zA-Z0-9_-]+) \\s*\n",
      "beginCaptures": {
        "1": {
          "name": "storage.type.BigbangAC"
        },
        "2": {
          "name": "punctuation.section.begin.BigbangAC"
        },
        "3": {
          "name": "entity.name.function.BigbangAC"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.end.BigbangAC"
        }
      },
      "patterns": [
        {
          "include": "#args"
        }
      ]
    },
    "set-var": {
      "match": "(?x)\n  (?<=^[(]) \\s*\n  (set-(?:constant|data-var|map|fungible-token|non-fungible-token|trait)) \\s+\n  ([a-zA-Z][a-zA-Z0-9_-]+)\n",
      "captures": {
        "1": {
          "name": "storage.type.BigbangAC"
        },
        "2": {
          "name": "variable.other.BigbangAC"
        }
      }
    },
    "tuple-key": {
      "name": "entity.name.type.BigbangAC",
      "match": "(?x)\n  ([a-z][a-zA-Z0-9_-]+)(?=:)\n"
    },
    "args": {
      "begin": "(?x)\n  (?<=^|[(]) \\s*\n  ([a-z][a-zA-Z0-9_-]+) \\s*\n",
      "beginCaptures": {
        "0": {
          "name": "variable.parameter.BigbangAC"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.end.BigbangAC"
        }
      },
      "patterns": [
        {
          "include": "#datatype"
        },
        {
          "include": "#tuple-key"
        },
        {
          "include": "#number"
        }
      ]
    }
  }
}